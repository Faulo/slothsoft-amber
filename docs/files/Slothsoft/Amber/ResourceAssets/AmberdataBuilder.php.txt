<?php
declare(strict_types = 1);
namespace Slothsoft\Amber\ResourceAssets;

use Slothsoft\Farah\FarahUrl\FarahUrlArguments;
use Slothsoft\Farah\Module\Asset\AssetInterface;
use Slothsoft\Farah\Module\Asset\LinkInstructionCollection;
use Slothsoft\Farah\Module\Asset\UseInstructionCollection;
use Slothsoft\Farah\Module\Asset\ExecutableBuilderStrategy\ExecutableBuilderStrategyInterface;
use Slothsoft\Farah\Module\Executable\ExecutableStrategies;
use Slothsoft\Farah\Module\Executable\ResultBuilderStrategy\TransformationResultBuilder;
use Slothsoft\Farah\Module\Module;
use Slothsoft\Farah\FarahUrl\FarahUrlPath;

class AmberdataBuilder implements ExecutableBuilderStrategyInterface
{
    public function buildExecutableStrategies(AssetInterface $context, FarahUrlArguments $args): ExecutableStrategies
    {
        $game = $args->get(DatasetParameterFilter::PARAM_GAME);
        $version = $args->get(DatasetParameterFilter::PARAM_VERSION);
        $infoset = $args->get(DatasetParameterFilter::PARAM_INFOSET);
        $user = $args->get(DatasetParameterFilter::PARAM_USER);
        
        $convertUrl = $context->createUrl($args)->withAssetPath(FarahUrlPath::createFromString("/games/$game/convert/libs"));
        $datasetUrl = $context->createUrl($args)->withAssetPath(FarahUrlPath::createFromString("/game-resources/dataset"));
        
        $getUseInstructions = function() use ($context, $convertUrl, $datasetUrl) : UseInstructionCollection {
            $instructions = new UseInstructionCollection();
            $instructions->rootAsset = $context;
            $instructions->templateAsset = Module::resolveToAsset($convertUrl);
            $instructions->documentAssets[] = Module::resolveToAsset($datasetUrl);
            return $instructions;
        };
        $getLinkInstructions = function() use ($context) : LinkInstructionCollection {
            return new LinkInstructionCollection();
        };
        $resultBuilder = new TransformationResultBuilder($getUseInstructions, $getLinkInstructions);
        return new ExecutableStrategies($resultBuilder);
    }
}


